"""initial

Revision ID: 8bdf11d89890
Revises: 
Create Date: 2024-08-01 10:02:13.400139

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8bdf11d89890'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('auth_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('scopes', sa.String(), nullable=True),
    sa.Column('date_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_auth_user_id'), 'auth_user', ['id'], unique=False)
    op.create_index(op.f('ix_auth_user_username'), 'auth_user', ['username'], unique=True)
    op.create_table('gallery',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('date_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gallery_id'), 'gallery', ['id'], unique=False)
    op.create_table('source_bucket',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('bucket_name', sa.String(), nullable=False),
    sa.Column('access_key_id', sa.String(), nullable=False),
    sa.Column('secret_access_key', sa.String(), nullable=False),
    sa.Column('media_prefix', sa.String(), nullable=True),
    sa.Column('grid_view', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_source_bucket_id'), 'source_bucket', ['id'], unique=False)
    op.create_table('source_vimeo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('client_identifier', sa.String(), nullable=False),
    sa.Column('client_secret', sa.String(), nullable=False),
    sa.Column('access_token', sa.String(), nullable=False),
    sa.Column('grid_view', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_source_vimeo_id'), 'source_vimeo', ['id'], unique=False)
    op.create_table('tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tag_title'), 'tag', ['title'], unique=True)
    op.create_table('item_bucket',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('source_bucket_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('mime_type', sa.String(length=100), nullable=True),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('date_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['source_bucket_id'], ['source_bucket.id'], name='item_bucket_source_bucket_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_item_bucket_id'), 'item_bucket', ['id'], unique=False)
    op.create_table('item_vimeo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('source_vimeo_id', sa.Integer(), nullable=False),
    sa.Column('video_id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('thumbnail', sa.String(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('date_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['source_vimeo_id'], ['source_vimeo.id'], name='item_vimeo_source_vimeo_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_item_vimeo_id'), 'item_vimeo', ['id'], unique=False)
    op.create_table('gallery_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('gallery_id', sa.Integer(), nullable=False),
    sa.Column('item_bucket_id', sa.Integer(), nullable=True),
    sa.Column('item_vimeo_id', sa.Integer(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['gallery_id'], ['gallery.id'], name='gallery_item_gallery_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['item_bucket_id'], ['item_bucket.id'], name='gallery_item_item_bucket_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['item_vimeo_id'], ['item_vimeo.id'], name='gallery_item_item_vimeo_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gallery_item_id'), 'gallery_item', ['id'], unique=False)
    op.create_table('tag_item_bucket',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('item_bucket_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['item_bucket_id'], ['item_bucket.id'], name='tag_item_bucket_item_bucket_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], name='tag_item_bucket_tag_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tag_item_vimeo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('item_vimeo_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['item_vimeo_id'], ['item_vimeo.id'], name='tag_item_vimeo_item_vimeo_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], name='tag_item_vimeo_tag_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tag_item_vimeo')
    op.drop_table('tag_item_bucket')
    op.drop_index(op.f('ix_gallery_item_id'), table_name='gallery_item')
    op.drop_table('gallery_item')
    op.drop_index(op.f('ix_item_vimeo_id'), table_name='item_vimeo')
    op.drop_table('item_vimeo')
    op.drop_index(op.f('ix_item_bucket_id'), table_name='item_bucket')
    op.drop_table('item_bucket')
    op.drop_index(op.f('ix_tag_title'), table_name='tag')
    op.drop_table('tag')
    op.drop_index(op.f('ix_source_vimeo_id'), table_name='source_vimeo')
    op.drop_table('source_vimeo')
    op.drop_index(op.f('ix_source_bucket_id'), table_name='source_bucket')
    op.drop_table('source_bucket')
    op.drop_index(op.f('ix_gallery_id'), table_name='gallery')
    op.drop_table('gallery')
    op.drop_index(op.f('ix_auth_user_username'), table_name='auth_user')
    op.drop_index(op.f('ix_auth_user_id'), table_name='auth_user')
    op.drop_table('auth_user')
    # ### end Alembic commands ###
